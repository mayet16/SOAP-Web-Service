
#this is for oracle DATABASE

#spring.datasource.driver-class-name=oracle.jdbc.OracleDriver
#spring.datasource.url=jdbc:oracle:thin:@//localhost:1521/orcl.HIBRETBANK.COM
#spring.datasource.username=c##Mayet
#spring.datasource.password=mayet1234
#no dialect for oracle DB 19c , but hibernate orm 5.4 support oracle db version 12c
#spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.Oracle12cDialect


#THIS ONE IS FOR MYSQL DATABASE CONNECTION

#spring.datasource.url=jdbc:mysql://localhost:3306/cruddb?useSSL=false
#spring.datasource.username=root
#spring.datasource.password=mayet1234
#spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5InnoDBDialect


#THIS IS FOR H2 DATABASE AND FOR TESTING THE JPA REPOSITORY USING @DATAJPATEST ANNOTATION

#spring.datasource.url=jdbc:h2:mem:cruddb  
#spring.datasource.driverClassName=org.h2.Driver
#spring.datasource.username=sa  
#spring.datasource.password=  
#spring.jpa.database-platform=org.hibernate.dialect.H2Dialect
#spring.h2.console.enabled=true 
#spring.h2.console.path=/h2-console


#this is for microsoft sql server database
spring.datasource.driverClassName=com.microsoft.sqlserver.jdbc.SQLServerDriver
spring.datasource.url=jdbc:sqlserver://localhost:1433;databaseName=cruddb;integratedSecurity=true;trustServerCertificate=true;
spring.datasource.username=HO-COR-19\Dell
spring.datasource.password=Mayet@1234
 #The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.SQLServer2012Dialect


#this 3 lines of properties are used for all database
# Hibernate ddl auto (create, create-drop, validate, update)
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
